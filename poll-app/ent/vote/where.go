// Code generated by ent, DO NOT EDIT.

package vote

import (
	"poll-app/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Vote {
	return predicate.Vote(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Vote {
	return predicate.Vote(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Vote {
	return predicate.Vote(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Vote {
	return predicate.Vote(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Vote {
	return predicate.Vote(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Vote {
	return predicate.Vote(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Vote {
	return predicate.Vote(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Vote {
	return predicate.Vote(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Vote {
	return predicate.Vote(sql.FieldLTE(FieldID, id))
}

// PollID applies equality check predicate on the "poll_id" field. It's identical to PollIDEQ.
func PollID(v int) predicate.Vote {
	return predicate.Vote(sql.FieldEQ(FieldPollID, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v string) predicate.Vote {
	return predicate.Vote(sql.FieldEQ(FieldUserID, v))
}

// OptionID applies equality check predicate on the "option_id" field. It's identical to OptionIDEQ.
func OptionID(v int) predicate.Vote {
	return predicate.Vote(sql.FieldEQ(FieldOptionID, v))
}

// PollIDEQ applies the EQ predicate on the "poll_id" field.
func PollIDEQ(v int) predicate.Vote {
	return predicate.Vote(sql.FieldEQ(FieldPollID, v))
}

// PollIDNEQ applies the NEQ predicate on the "poll_id" field.
func PollIDNEQ(v int) predicate.Vote {
	return predicate.Vote(sql.FieldNEQ(FieldPollID, v))
}

// PollIDIn applies the In predicate on the "poll_id" field.
func PollIDIn(vs ...int) predicate.Vote {
	return predicate.Vote(sql.FieldIn(FieldPollID, vs...))
}

// PollIDNotIn applies the NotIn predicate on the "poll_id" field.
func PollIDNotIn(vs ...int) predicate.Vote {
	return predicate.Vote(sql.FieldNotIn(FieldPollID, vs...))
}

// PollIDGT applies the GT predicate on the "poll_id" field.
func PollIDGT(v int) predicate.Vote {
	return predicate.Vote(sql.FieldGT(FieldPollID, v))
}

// PollIDGTE applies the GTE predicate on the "poll_id" field.
func PollIDGTE(v int) predicate.Vote {
	return predicate.Vote(sql.FieldGTE(FieldPollID, v))
}

// PollIDLT applies the LT predicate on the "poll_id" field.
func PollIDLT(v int) predicate.Vote {
	return predicate.Vote(sql.FieldLT(FieldPollID, v))
}

// PollIDLTE applies the LTE predicate on the "poll_id" field.
func PollIDLTE(v int) predicate.Vote {
	return predicate.Vote(sql.FieldLTE(FieldPollID, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v string) predicate.Vote {
	return predicate.Vote(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v string) predicate.Vote {
	return predicate.Vote(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...string) predicate.Vote {
	return predicate.Vote(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...string) predicate.Vote {
	return predicate.Vote(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v string) predicate.Vote {
	return predicate.Vote(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v string) predicate.Vote {
	return predicate.Vote(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v string) predicate.Vote {
	return predicate.Vote(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v string) predicate.Vote {
	return predicate.Vote(sql.FieldLTE(FieldUserID, v))
}

// UserIDContains applies the Contains predicate on the "user_id" field.
func UserIDContains(v string) predicate.Vote {
	return predicate.Vote(sql.FieldContains(FieldUserID, v))
}

// UserIDHasPrefix applies the HasPrefix predicate on the "user_id" field.
func UserIDHasPrefix(v string) predicate.Vote {
	return predicate.Vote(sql.FieldHasPrefix(FieldUserID, v))
}

// UserIDHasSuffix applies the HasSuffix predicate on the "user_id" field.
func UserIDHasSuffix(v string) predicate.Vote {
	return predicate.Vote(sql.FieldHasSuffix(FieldUserID, v))
}

// UserIDEqualFold applies the EqualFold predicate on the "user_id" field.
func UserIDEqualFold(v string) predicate.Vote {
	return predicate.Vote(sql.FieldEqualFold(FieldUserID, v))
}

// UserIDContainsFold applies the ContainsFold predicate on the "user_id" field.
func UserIDContainsFold(v string) predicate.Vote {
	return predicate.Vote(sql.FieldContainsFold(FieldUserID, v))
}

// OptionIDEQ applies the EQ predicate on the "option_id" field.
func OptionIDEQ(v int) predicate.Vote {
	return predicate.Vote(sql.FieldEQ(FieldOptionID, v))
}

// OptionIDNEQ applies the NEQ predicate on the "option_id" field.
func OptionIDNEQ(v int) predicate.Vote {
	return predicate.Vote(sql.FieldNEQ(FieldOptionID, v))
}

// OptionIDIn applies the In predicate on the "option_id" field.
func OptionIDIn(vs ...int) predicate.Vote {
	return predicate.Vote(sql.FieldIn(FieldOptionID, vs...))
}

// OptionIDNotIn applies the NotIn predicate on the "option_id" field.
func OptionIDNotIn(vs ...int) predicate.Vote {
	return predicate.Vote(sql.FieldNotIn(FieldOptionID, vs...))
}

// OptionIDGT applies the GT predicate on the "option_id" field.
func OptionIDGT(v int) predicate.Vote {
	return predicate.Vote(sql.FieldGT(FieldOptionID, v))
}

// OptionIDGTE applies the GTE predicate on the "option_id" field.
func OptionIDGTE(v int) predicate.Vote {
	return predicate.Vote(sql.FieldGTE(FieldOptionID, v))
}

// OptionIDLT applies the LT predicate on the "option_id" field.
func OptionIDLT(v int) predicate.Vote {
	return predicate.Vote(sql.FieldLT(FieldOptionID, v))
}

// OptionIDLTE applies the LTE predicate on the "option_id" field.
func OptionIDLTE(v int) predicate.Vote {
	return predicate.Vote(sql.FieldLTE(FieldOptionID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Vote) predicate.Vote {
	return predicate.Vote(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Vote) predicate.Vote {
	return predicate.Vote(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Vote) predicate.Vote {
	return predicate.Vote(sql.NotPredicates(p))
}
